----------------------------------------------
inxi -F // informações detalhas do pc
---------------------------------------
lscpu //info do pc
---------------------------------------
lshw // informações de drivers
---------------------------------------
cat /proc/cpuinfo //informação bem detalhadas de cada cpu
---------------------------------------
free -h //memoria
---------------------------------------
df -h //dispositivos montados
---------------------------------------
top // processos
---------------------------------------
du arquivos
---------------------------------------
cat // ler arquivo no terminal
---------------------------------------
tail -f //segura
---------------------------------------
pwd // pasta atual
---------------------------------------
ps // processos
---------------------------------------
kill -9 // matar processo
---------------------------------------
rm -r //apagar
---------------------------------------------------
locate -i // busca arquivos
---------------------------------------------------
grep // pesquisar dentro do arquivo txt
---------------------------------------------------
hostname -i //endereço ip
ifconfig
--------------------------------------------------
echo set completion-ignore-case on | sudo tee -a /etc/inputrc ignorar case sensitive //ignorar case sensitive
---------------------------------------------------------------
alias palmprint="cd ~/Vsoft/BioPass/biopass-palmprint-recognition/vsoft_biopass_palmprint_recognition/notebooks/; conda activate biopass-palmprint-recognition"
alias spoofs="cd ~/Vsoft/BioPass/biopass-face-anti-spoofing/vsoft_fas_classifier; conda activate biopass-face-anti-spoofing"
alias de="conda deactivate"
alias ju="jupyter lab"
alias restaurar="git ls-files -d | xargs git checkout"
-------------------------------
alias restaurar="git ls-files -d | xargs git checkout"
-------------------------------
git config --global credential.helper store  // salvar credenciais

----------------------------
If you wish to do it permanently, edit /etc/gdm3/custom.conf and uncomment the line:

#WaylandEnable=false
----------------------------------------
feh --recursive --auto-zoom --geometry 800x600 .  // visualizar fotos da pasta toda

----------------------------------------
find . -type f | wc -l // contar arquivos dentro de uma pasta

find . -maxdepth 1 -type f //pasta atual, sem profundidade

find . -name "*.png" -type f -delete

find . -name '*.jpg' -exec mogrify -format png *.jpg\> {} \; //converter jpg em png

find . -name '*.png' -exec mogrify -colorspace Gray *.png\> {} \;

find . -name '*.jpeg' | wc -l //contar arquivos jpeg

find . ! '(' -name '*.jpg' -o -name '*.jpeg' ')' 

find . ! '(' -name '*.png' ')' -type f // Exibir arquivos diferentes de png

----------------------------------------
mover todos os arquivos com xargs.

find . -name '*.jpg' | xargs mv -t ./todas
----------------------------------------

pdftk TCC_PEDRO_IVO.pdf parking_crop_Pedro.pdf parking_Pedro_v2.1.pdf output tcc_PEDRO_IVO.pdf

gs -dPDFA -dBATCH -dNOPAUSE -sColorConversionStrategy=UseDeviceIndependentColor -sDEVICE=pdfwrite -dPDFACompatibilityPolicy=2 -sOutputFile=TCC_PEDRO_IVO_PDFA.pdf ./tcc_PEDRO_IVO.pdf

------------------------------------------

unzip varios arquivos com as pastas

for f in *.zip; do unzip -d "${f%*.zip}" "$f"; done

------------------------------------------

conda install -c conda-forge cudatoolkit=11.0 cudnn=8.1.0
conda install -c conda-forge cudatoolkit-dev=11.0

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$CONDA_PREFIX/lib/

python3 -m pip install tensorflow

python3 -c "import tensorflow as tf; print(tf.config.list_physical_devices('GPU'))"


-----------------------------
Docker volume e copia

COPIAR ARQUIVOS PARA DENTRO DO DOCKER (volume):
docker run -it --mount type=bind,source=C:\opt,target=/copiar vsoft.azurecr.io/pesquisa/vsoft-basics:ubuntu-20

COPIAR PASTA DO DOCKER:
docker create --name copiar-opt vsoft.azurecr.io/pesquisa/vsoft-basics:ubuntu-20
docker cp copiar-opt:/opt/ C:\opt

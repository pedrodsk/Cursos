#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Aug  1 00:28:10 2021

@author: pedrodsk
"""
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers

import pandas as pd
from sklearn.model_selection import train_test_split

previsores = pd.read_csv('entradas_breast.csv') # carregar csv no dataframe
classe = pd.read_csv('saidas_breast.csv') #carregar as saidas
previsores_treinamento, previsores_teste,classe_treinamento, classe_teste = train_test_split(previsores, classe, test_size=0.25)

#classificador = keras.Sequential(
#    [
#     layers.Dense(30, activation='relu'),
#     layers.Dense(16, activation='relu'),
#     layers.Dense(1,activation='sigmoid')
#    ])
model = keras.Sequential(name="sequencia")
model.add(layers.Dense(units=16,activation='relu',kernel_initializer='random_uniform',input_dim=30))
model.add(layers.Dense(units=16,activation='relu',kernel_initializer='random_uniform'))
model.add(layers.Dense(units=1, activation='sigmoid'))
otimizador = keras.optimizers.Adam(learning_rate=0.001, decay = 0.0001, clipvalue=0.5)        
model.compile(optimizer=otimizador, loss = 'binary_crossentropy', metrics = ['binary_accuracy'])
model.fit(previsores_treinamento, classe_treinamento, batch_size=10, epochs=100)


pesos0= model.layers[0].get_weights()
pesos1= model.layers[1].get_weights()
pesos2= model.layers[2].get_weights()

previsoes = model.predict(previsores_teste)
previsoes = (previsoes > 0.5)

from sklearn.metrics import confusion_matrix, accuracy_score
precisao = accuracy_score(classe_teste,previsoes)
matriz = confusion_matrix(classe_teste,previsoes)

resultado = model.evaluate(previsores_teste, classe_teste)

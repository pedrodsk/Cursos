#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Aug  8 03:17:38 2021

@author: pedrodsk
"""

import pandas as pd
import numpy as np
from keras.models import Sequential
from keras.layers import Dense

base = pd.read_csv('iris.csv')
previsores = base.iloc[:,0:4].values
classe = base['class'].values

from sklearn.preprocessing import LabelEncoder
labelencoder = LabelEncoder()
classe = labelencoder.fit_transform(classe)

from keras.utils import np_utils

classe = np_utils.to_categorical(classe)

from sklearn.model_selection import train_test_split
previsores_treinamento, previsores_teste, classe_treinamento, classe_teste= train_test_split(previsores,classe,test_size=0.25)

classificador = Sequential()
classificador.add(Dense(units=4,activation='relu', input_dim =4))
classificador.add(Dense(units=4,activation='relu'))
classificador.add(Dense(units=3,activation='softmax'))
classificador.summary()

classificador.compile(optimizer='adam',loss='categorical_crossentropy',metrics='categorical_accuracy')

classificador.fit(previsores_treinamento, classe_treinamento,batch_size=10,epochs=1000)

resultado = classificador.evaluate(previsores_teste, classe_teste)
previsoes = classificador.predict(previsores_teste)
previsoes = (previsoes > 0.5)

classe_teste2 = [np.argmax(t) for t in classe_teste]
previsoes2 = [np.argmax(t) for t in previsoes]

from sklearn.metrics import confusion_matrix
matriz = confusion_matrix(previsoes2, classe_teste2)

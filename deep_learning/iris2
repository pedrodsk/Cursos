#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Aug  8 03:49:20 2021

@author: pedrodsk
"""

import pandas as pd
from keras.models import Sequential
from keras.layers import Dense
from keras.utils import np_utils
from keras.wrappers.scikit_learn import KerasClassifier
from sklearn.model_selection import cross_val_score
from sklearn.preprocessing import LabelEncoder

base = pd.read_csv('iris.csv')
previsores = base.iloc[:,0:4].values
classe = base['class'].values
label = LabelEncoder()
classe = label.fit_transform(classe)
classe = np_utils.to_categorical(classe)

def criar_rede():
    classificador = Sequential()
    classificador.add(Dense(units=4,activation='relu', input_dim =4))
    classificador.add(Dense(units=4,activation='relu'))
    classificador.add(Dense(units=3,activation='softmax'))
    classificador.compile(optimizer='adam',loss='categorical_crossentropy',metrics=['categorical_accuracy'])
    classificador.summary()
    return classificador

classificador = KerasClassifier(build_fn=criar_rede,epochs=100,batch_size=10)

resultados = cross_val_score(estimator= classificador, X=previsores,y=classe,cv=10,scoring='accuracy')

media = resultados.mean()
desvio = resultados.std()


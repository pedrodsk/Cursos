#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sat Jul 31 21:18:16 2021

@author: pedrodsk
"""

import numpy as np
from sklearn import datasets #importar datasets do sklearn

def sigmoid(soma):
    return 1/(1+np.exp(-soma))

def sigmoidDerivada(sig): #passar o valor da função sigmoid
    return sig*(1-sig)

base = datasets.load_breast_cancer() #carregar breast cancer
entradas = base.data
valoresSaidas = base.target
saidas = np.empty([569,1],dtype=int)
for i in range(569):
    saidas[i]=valoresSaidas[i]

pesos0 = 2*np.random.random((30,5)) -1 # 3 camadas escondidas
pesos1 = 2*np.random.random((5,1)) -1 

epocas = 100000
taxaAprendizagem = 0.3
momento = 1

for j in range(epocas):
    camadaEntrada = entradas
    somaSinapse0 = np.dot(camadaEntrada,pesos0)
    camadaOculta = sigmoid(somaSinapse0)
    
    somaSinapse1 = np.dot(camadaOculta,pesos1)
    camadaSaida = sigmoid(somaSinapse1) #resposta final de cada registro
    erroCamadaSaida = saidas - camadaSaida
    mediaAbsoluta = np.mean(np.abs(erroCamadaSaida))
    print("Erro",mediaAbsoluta)
    deltaSaida = erroCamadaSaida * sigmoidDerivada(camadaSaida)
    
    deltaCamadaOculta = deltaSaida.dot(pesos1.T) * sigmoidDerivada(camadaOculta)
    
    pesosNovo1 = camadaOculta.T.dot(deltaSaida)
    pesos1= (pesos1*momento)+(pesosNovo1*taxaAprendizagem)
    
    pesosNovo0 = camadaEntrada.T.dot(deltaCamadaOculta)
    pesos0 = (pesos0*momento) + (pesosNovo0*taxaAprendizagem)
